/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public static boolean isIdentical(TreeNode root, TreeNode sub){
        if(root == null && sub == null){
            return true;
        }

        if(root == null || sub == null){
            return false;
        }

        if(root.val == sub.val){
            return isIdentical(root.left, sub.left) && isIdentical(root.right, sub.right);
        }

        return false;
    }

    public boolean isSubtree(TreeNode root, TreeNode subRoot) {
        if(subRoot == null)
            return true;

        if(root == null)
            return false;

        if(root.val == subRoot.val){
            if(isIdentical(root, subRoot))
                return true;
        }

        return isSubtree(root.left,subRoot) || isSubtree(root.right,subRoot);
       
    }
}
