/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseLL(ListNode head){
        if(head.next == null){
            return head;
        }

        ListNode cur = head, prev = null;
        while(cur != null){
            ListNode n = cur.next;
            cur.next = prev;
            prev = cur;
            cur = n;
        }

        return prev;
    }

    public ListNode middle(ListNode head){
        ListNode s = head, f = head;

        while(f != null && f.next != null){
            s = s.next;
            f = f.next.next;
        }

        return s;
    }

    public boolean isPalindrome(ListNode head) {
        if(head == null || head.next == null){
            return true;
        }

        ListNode mid = middle(head);
        ListNode n = reverseLL(mid);

        ListNode l = head;

        while(n != null){
            if(l.val != n.val)
                return false;
            n = n.next;
            l = l.next;
        }

        return true;

    }
}
